{"ast":null,"code":"var _jsxFileName = \"/Users/test/crud-frontend-/crud-frontend/src/components/Birthdays.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchBirthdays, createBirthday, updateBirthday, deleteBirthday } from '../services/api'; // Import from api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Birthdays = () => {\n  _s();\n  const [birthdays, setBirthdays] = useState([]);\n  const [name, setName] = useState('');\n  const [date, setDate] = useState('');\n  const [editId, setEditId] = useState(null);\n  const [error, setError] = useState(null); // To store any error messages\n  const token = localStorage.getItem('token');\n\n  // Move loadBirthdays function inside useEffect to avoid stale closure\n  useEffect(() => {\n    const loadBirthdays = async () => {\n      try {\n        const data = await fetchBirthdays(token);\n        setBirthdays(data);\n      } catch (err) {\n        setError(err.detail || 'Error fetching birthdays');\n        console.error('Error fetching birthdays:', err);\n      }\n    };\n    loadBirthdays(); // Call the fetch function when component mounts\n  }, [token]); // Dependencies: token\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Reset error on submit\n    try {\n      if (editId) {\n        // Update existing birthday\n        await updateBirthday(editId, {\n          name,\n          date\n        }, token);\n        setEditId(null); // Reset edit ID after saving\n      } else {\n        // Create new birthday\n        await createBirthday({\n          name,\n          date\n        }, token);\n      }\n      setName('');\n      setDate('');\n      // Re-fetch birthdays after creating or updating\n      const data = await fetchBirthdays(token);\n      setBirthdays(data);\n    } catch (error) {\n      setError('Error saving birthday: ' + (error.detail || 'An error occurred.'));\n      console.error('Error saving birthday:', error);\n    }\n  };\n  const handleEdit = birthday => {\n    setName(birthday.name);\n    setDate(birthday.date);\n    setEditId(birthday.id);\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteBirthday(id, token);\n      // Re-fetch birthdays after deletion\n      const data = await fetchBirthdays(token);\n      setBirthdays(data);\n    } catch (error) {\n      setError('Error deleting birthday: ' + (error.detail || 'An error occurred.'));\n      console.error('Error deleting birthday:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Birthdays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? 'Update Birthday' : 'Add Birthday'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: birthdays.length > 0 ? birthdays.map(birthday => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [birthday.name, \" - \", birthday.date, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(birthday),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(birthday.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, birthday.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No birthdays found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) // Handle empty state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Birthdays, \"bhRvTluWmzowhFT7S9pK1s/EFzY=\");\n_c = Birthdays;\nexport default Birthdays;\nvar _c;\n$RefreshReg$(_c, \"Birthdays\");","map":{"version":3,"names":["React","useState","useEffect","fetchBirthdays","createBirthday","updateBirthday","deleteBirthday","jsxDEV","_jsxDEV","Birthdays","_s","birthdays","setBirthdays","name","setName","date","setDate","editId","setEditId","error","setError","token","localStorage","getItem","loadBirthdays","data","err","detail","console","handleSubmit","e","preventDefault","handleEdit","birthday","id","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","required","length","map","onClick","_c","$RefreshReg$"],"sources":["/Users/test/crud-frontend-/crud-frontend/src/components/Birthdays.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchBirthdays, createBirthday, updateBirthday, deleteBirthday } from '../services/api'; // Import from api.js\n\nconst Birthdays = () => {\n    const [birthdays, setBirthdays] = useState([]);\n    const [name, setName] = useState('');\n    const [date, setDate] = useState('');\n    const [editId, setEditId] = useState(null);\n    const [error, setError] = useState(null); // To store any error messages\n    const token = localStorage.getItem('token');\n\n    // Move loadBirthdays function inside useEffect to avoid stale closure\n    useEffect(() => {\n        const loadBirthdays = async () => {\n            try {\n                const data = await fetchBirthdays(token);\n                setBirthdays(data);\n            } catch (err) {\n                setError(err.detail || 'Error fetching birthdays');\n                console.error('Error fetching birthdays:', err);\n            }\n        };\n\n        loadBirthdays(); // Call the fetch function when component mounts\n    }, [token]); // Dependencies: token\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null); // Reset error on submit\n        try {\n            if (editId) {\n                // Update existing birthday\n                await updateBirthday(editId, { name, date }, token);\n                setEditId(null); // Reset edit ID after saving\n            } else {\n                // Create new birthday\n                await createBirthday({ name, date }, token);\n            }\n            setName('');\n            setDate('');\n            // Re-fetch birthdays after creating or updating\n            const data = await fetchBirthdays(token);\n            setBirthdays(data);\n        } catch (error) {\n            setError('Error saving birthday: ' + (error.detail || 'An error occurred.'));\n            console.error('Error saving birthday:', error);\n        }\n    };\n\n    const handleEdit = (birthday) => {\n        setName(birthday.name);\n        setDate(birthday.date);\n        setEditId(birthday.id);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            await deleteBirthday(id, token);\n            // Re-fetch birthdays after deletion\n            const data = await fetchBirthdays(token);\n            setBirthdays(data);\n        } catch (error) {\n            setError('Error deleting birthday: ' + (error.detail || 'An error occurred.'));\n            console.error('Error deleting birthday:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Birthdays</h2>\n            {error && <div style={{ color: 'red' }}>{error}</div>} {/* Show error messages */}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"date\"\n                    value={date}\n                    onChange={(e) => setDate(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">{editId ? 'Update Birthday' : 'Add Birthday'}</button>\n            </form>\n            <ul>\n                {birthdays.length > 0 ? (\n                    birthdays.map((birthday) => (\n                        <li key={birthday.id}>\n                            {birthday.name} - {birthday.date}\n                            <button onClick={() => handleEdit(birthday)}>Edit</button>\n                            <button onClick={() => handleDelete(birthday.id)}>Delete</button>\n                        </li>\n                    ))\n                ) : (\n                    <li>No birthdays found.</li> // Handle empty state\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Birthdays;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}