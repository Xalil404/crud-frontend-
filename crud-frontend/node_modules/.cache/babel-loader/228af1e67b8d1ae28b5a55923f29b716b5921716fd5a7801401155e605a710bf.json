{"ast":null,"code":"var _jsxFileName = \"/Users/test/crud-frontend-/crud-frontend/src/components/auth/GoogleLoginPage.js\";\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginPage = () => {\n  const responseGoogle = response => {\n    console.log(response);\n    // Send user data to the backend\n    const userData = {\n      token: response.tokenId,\n      profile: response.profileObj\n    };\n    fetch('YOUR_BACKEND_URL/api/auth/google/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      // Handle successful login (e.g., store token, redirect user)\n      if (data.message) {\n        // Redirect or perform additional actions here\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"YOUR_CLIENT_ID.apps.googleusercontent.com\",\n      buttonText: \"Login with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = GoogleLoginPage;\nexport default GoogleLoginPage;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginPage\");","map":{"version":3,"names":["React","GoogleLogin","jsxDEV","_jsxDEV","GoogleLoginPage","responseGoogle","response","console","log","userData","token","tokenId","profile","profileObj","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","clientId","buttonText","onSuccess","onFailure","cookiePolicy","_c","$RefreshReg$"],"sources":["/Users/test/crud-frontend-/crud-frontend/src/components/auth/GoogleLoginPage.js"],"sourcesContent":["import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst GoogleLoginPage = () => {\n    const responseGoogle = (response) => {\n        console.log(response);\n        // Send user data to the backend\n        const userData = {\n            token: response.tokenId,\n            profile: response.profileObj,\n        };\n\n        fetch('YOUR_BACKEND_URL/api/auth/google/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userData),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data);\n            // Handle successful login (e.g., store token, redirect user)\n            if (data.message) {\n                // Redirect or perform additional actions here\n            }\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n    };\n\n    return (\n        <div>\n            <h1>Google Login</h1>\n            <GoogleLogin\n                clientId=\"YOUR_CLIENT_ID.apps.googleusercontent.com\"\n                buttonText=\"Login with Google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n        </div>\n    );\n};\n\nexport default GoogleLoginPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACjCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB;IACA,MAAMG,QAAQ,GAAG;MACbC,KAAK,EAAEJ,QAAQ,CAACK,OAAO;MACvBC,OAAO,EAAEN,QAAQ,CAACO;IACtB,CAAC;IAEDC,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;IACjC,CAAC,CAAC,CACDW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZhB,OAAO,CAACC,GAAG,CAACe,IAAI,CAAC;MACjB;MACA,IAAIA,IAAI,CAACC,OAAO,EAAE;QACd;MAAA;IAER,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdnB,OAAO,CAACmB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB5B,OAAA,CAACF,WAAW;MACR+B,QAAQ,EAAC,2CAA2C;MACpDC,UAAU,EAAC,mBAAmB;MAC9BC,SAAS,EAAE7B,cAAe;MAC1B8B,SAAS,EAAE9B,cAAe;MAC1B+B,YAAY,EAAE;IAAqB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACM,EAAA,GAzCIjC,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}