{"ast":null,"code":"var _jsxFileName = \"/Users/test/crud-frontend-/crud-frontend/src/components/Birthdays.js\",\n  _s = $RefreshSig$();\n// src/components/Birthdays.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api'; // Importing the configured Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Birthdays = () => {\n  _s();\n  const [birthdays, setBirthdays] = useState([]); // State for storing birthday data\n  const [error, setError] = useState(null); // State for storing error messages\n\n  // Function to load birthdays from the API\n  const loadBirthdays = async () => {\n    try {\n      const response = await api.get('/birthdays/'); // Fetching birthdays using the Axios instance\n      setBirthdays(response.data); // Update state with fetched data\n    } catch (err) {\n      console.error(\"Error fetching birthdays:\", err.response.data); // Log error to console\n      setError(err.response.data.detail || 'Failed to fetch birthdays'); // Update error state\n    }\n  };\n\n  // useEffect hook to load birthdays when the component mounts\n  useEffect(() => {\n    loadBirthdays(); // Call the function to load birthdays\n  }, []);\n\n  // Render error message if there is an error\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n\n  // Render the list of birthdays\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Birthdays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: birthdays.map(birthday => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [birthday.name, \" - \", birthday.date, \" \"]\n      }, birthday.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Birthdays, \"IYRnoz1Dn9VTLwbTHfe9CWr2OOc=\");\n_c = Birthdays;\nexport default Birthdays; // Export the component\nvar _c;\n$RefreshReg$(_c, \"Birthdays\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Birthdays","_s","birthdays","setBirthdays","error","setError","loadBirthdays","response","get","data","err","console","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","map","birthday","name","date","id","_c","$RefreshReg$"],"sources":["/Users/test/crud-frontend-/crud-frontend/src/components/Birthdays.js"],"sourcesContent":["// src/components/Birthdays.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api'; // Importing the configured Axios instance\n\nconst Birthdays = () => {\n    const [birthdays, setBirthdays] = useState([]); // State for storing birthday data\n    const [error, setError] = useState(null); // State for storing error messages\n\n    // Function to load birthdays from the API\n    const loadBirthdays = async () => {\n        try {\n            const response = await api.get('/birthdays/'); // Fetching birthdays using the Axios instance\n            setBirthdays(response.data); // Update state with fetched data\n        } catch (err) {\n            console.error(\"Error fetching birthdays:\", err.response.data); // Log error to console\n            setError(err.response.data.detail || 'Failed to fetch birthdays'); // Update error state\n        }\n    };\n\n    // useEffect hook to load birthdays when the component mounts\n    useEffect(() => {\n        loadBirthdays(); // Call the function to load birthdays\n    }, []);\n\n    // Render error message if there is an error\n    if (error) return <div>{error}</div>;\n\n    // Render the list of birthdays\n    return (\n        <div>\n            <h2>Upcoming Birthdays</h2>\n            <ul>\n                {birthdays.map((birthday) => (\n                    <li key={birthday.id}>\n                        {birthday.name} - {birthday.date} {/* Display birthday name and date */}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Birthdays; // Export the component\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;MAC/CL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACP,KAAK,CAAC,2BAA2B,EAAEM,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/DJ,QAAQ,CAACK,GAAG,CAACH,QAAQ,CAACE,IAAI,CAACG,MAAM,IAAI,2BAA2B,CAAC,CAAC,CAAC;IACvE;EACJ,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACZW,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAMT;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAEpC;EACA,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,EACKX,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACpBpB,OAAA;QAAAc,QAAA,GACKM,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACE,IAAI,EAAC,GAAC;MAAA,GAD7BF,QAAQ,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CApCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAsCf,eAAeA,SAAS,CAAC,CAAC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}