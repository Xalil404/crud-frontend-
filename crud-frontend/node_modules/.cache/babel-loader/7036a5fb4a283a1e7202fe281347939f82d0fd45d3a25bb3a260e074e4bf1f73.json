{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst AUTH_URL = 'http://127.0.0.1:8000/auth'; // Authentication base URL\nconst API_URL = 'http://127.0.0.1:8000/api'; // API base URL for birthdays\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api',\n  // Base URL for all API requests\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Send cookies if any\n});\n\n// Add a request interceptor to include the token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axiosInstance;\n\n// Function to register a new user\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${AUTH_URL}/registration/`, userData);\n    return response.data; // Returns the user data from the response\n  } catch (error) {\n    throw error.response.data; // Customize this based on your needs\n  }\n};\n\n// Function to log in a user\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${AUTH_URL}/login/`, credentials);\n    console.log('Login Response:', response.data); // Verify exact token key here\n    return {\n      token: response.data.token || response.data.access\n    }; // Adjust key if needed\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Function to fetch birthdays\nexport const fetchBirthdays = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/birthdays/`, {\n      headers: {\n        Authorization: `Token ${token}`\n      } // Adjust based on your authentication method\n    });\n    return response.data; // Returns the list of birthdays\n  } catch (error) {\n    throw error.response.data; // Handle the error response\n  }\n};\n\n// Function to create a new birthday\nexport const createBirthday = async (birthdayData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/birthdays/`, birthdayData, {\n      headers: {\n        Authorization: `Token ${token}`\n      } // Adjust based on your authentication method\n    });\n    return response.data; // Returns the created birthday data\n  } catch (error) {\n    throw error.response.data; // Handle the error response\n  }\n};\n\n// Function to update a birthday\nexport const updateBirthday = async (birthdayId, birthdayData, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/birthdays/${birthdayId}/`, birthdayData, {\n      headers: {\n        Authorization: `Token ${token}`\n      } // Adjust based on your authentication method\n    });\n    return response.data; // Returns the updated birthday data\n  } catch (error) {\n    throw error.response.data; // Handle the error response\n  }\n};\n\n// Function to delete a birthday\nexport const deleteBirthday = async (birthdayId, token) => {\n  try {\n    const response = await axios.delete(`${API_URL}/birthdays/${birthdayId}/`, {\n      headers: {\n        Authorization: `Token ${token}`\n      } // Adjust based on your authentication method\n    });\n    return response.data; // Optionally return a success message or response\n  } catch (error) {\n    throw error.response.data; // Handle the error response\n  }\n};","map":{"version":3,"names":["axios","AUTH_URL","API_URL","axiosInstance","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","registerUser","userData","response","post","data","loginUser","credentials","console","log","access","fetchBirthdays","get","Authorization","createBirthday","birthdayData","updateBirthday","birthdayId","put","deleteBirthday","delete"],"sources":["/Users/test/crud-frontend-/crud-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst AUTH_URL = 'http://127.0.0.1:8000/auth'; // Authentication base URL\nconst API_URL = 'http://127.0.0.1:8000/api'; // API base URL for birthdays\n\n\n\n\nconst axiosInstance = axios.create({\n    baseURL: 'http://127.0.0.1:8000/api', // Base URL for all API requests\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    withCredentials: true, // Send cookies if any\n});\n\n// Add a request interceptor to include the token\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            config.headers['Authorization'] = `Token ${token}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\nexport default axiosInstance;\n\n\n\n// Function to register a new user\nexport const registerUser = async (userData) => {\n    try {\n        const response = await axios.post(`${AUTH_URL}/registration/`, userData);\n        return response.data; // Returns the user data from the response\n    } catch (error) {\n        throw error.response.data; // Customize this based on your needs\n    }\n};\n\n// Function to log in a user\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await axios.post(`${AUTH_URL}/login/`, credentials);\n        console.log('Login Response:', response.data); // Verify exact token key here\n        return { token: response.data.token || response.data.access }; // Adjust key if needed\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n\n// Function to fetch birthdays\nexport const fetchBirthdays = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/birthdays/`, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the list of birthdays\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to create a new birthday\nexport const createBirthday = async (birthdayData, token) => {\n    try {\n        const response = await axios.post(`${API_URL}/birthdays/`, birthdayData, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the created birthday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to update a birthday\nexport const updateBirthday = async (birthdayId, birthdayData, token) => {\n    try {\n        const response = await axios.put(`${API_URL}/birthdays/${birthdayId}/`, birthdayData, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the updated birthday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to delete a birthday\nexport const deleteBirthday = async (birthdayId, token) => {\n    try {\n        const response = await axios.delete(`${API_URL}/birthdays/${birthdayId}/`, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Optionally return a success message or response\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B,CAAC,CAAC;AAC/C,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAK7C,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC/BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AAC3B,CAAC,CAAC;;AAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,SAASM,KAAK,EAAE;EACtD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;AAED,eAAeZ,aAAa;;AAI5B;AACA,OAAO,MAAMe,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,GAAGpB,QAAQ,gBAAgB,EAAEkB,QAAQ,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,GAAGpB,QAAQ,SAAS,EAAEuB,WAAW,CAAC;IACpEC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC/C,OAAO;MAAEV,KAAK,EAAEQ,QAAQ,CAACE,IAAI,CAACV,KAAK,IAAIQ,QAAQ,CAACE,IAAI,CAACK;IAAO,CAAC,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMM,cAAc,GAAG,MAAOhB,KAAK,IAAK;EAC3C,IAAI;IACA,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAAC6B,GAAG,CAAC,GAAG3B,OAAO,aAAa,EAAE;MACtDI,OAAO,EAAE;QAAEwB,aAAa,EAAE,SAASlB,KAAK;MAAG,CAAC,CAAC;IACjD,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAOC,YAAY,EAAEpB,KAAK,KAAK;EACzD,IAAI;IACA,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,GAAGnB,OAAO,aAAa,EAAE8B,YAAY,EAAE;MACrE1B,OAAO,EAAE;QAAEwB,aAAa,EAAE,SAASlB,KAAK;MAAG,CAAC,CAAC;IACjD,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAOC,UAAU,EAAEF,YAAY,EAAEpB,KAAK,KAAK;EACrE,IAAI;IACA,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACmC,GAAG,CAAC,GAAGjC,OAAO,cAAcgC,UAAU,GAAG,EAAEF,YAAY,EAAE;MAClF1B,OAAO,EAAE;QAAEwB,aAAa,EAAE,SAASlB,KAAK;MAAG,CAAC,CAAC;IACjD,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMc,cAAc,GAAG,MAAAA,CAAOF,UAAU,EAAEtB,KAAK,KAAK;EACvD,IAAI;IACA,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACqC,MAAM,CAAC,GAAGnC,OAAO,cAAcgC,UAAU,GAAG,EAAE;MACvE5B,OAAO,EAAE;QAAEwB,aAAa,EAAE,SAASlB,KAAK;MAAG,CAAC,CAAC;IACjD,CAAC,CAAC;IACF,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}