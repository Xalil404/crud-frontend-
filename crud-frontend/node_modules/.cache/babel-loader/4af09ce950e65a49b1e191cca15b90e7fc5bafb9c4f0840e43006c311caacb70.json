{"ast":null,"code":"// src/services/api.js\nimport axios from'axios';const AUTH_URL='http://crud-backend-for-react-841cbc3a6949.herokuapp.com/auth';// Authentication base URL\nconst API_URL='http://crud-backend-for-react-841cbc3a6949.herokuapp.com/api';// API base URL for birthdays\n// Set up Axios instance\nconst api=axios.create({baseURL:API_URL});// Add a request interceptor\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');// Retrieve the token from local storage\nif(token){config.headers.Authorization=`Token ${token}`;// Assuming your backend uses 'Token' scheme\n}return config;},error=>{return Promise.reject(error);});// Function to register a new user\nexport const registerUser=async userData=>{try{const response=await axios.post(`${AUTH_URL}/registration/`,userData);return response.data;// Returns the user data from the response\n}catch(error){throw error.response.data;// Customize this based on your needs\n}};// Function to log in a user\nexport const loginUser=async credentials=>{try{const response=await axios.post(`${AUTH_URL}/login/`,credentials);console.log('Login Response:',response.data);// Log the response data\n// Store user ID in local storage\nlocalStorage.setItem('user',response.data.user);// Use 'userId' for consistency\nconsole.log('User ID saved:',response.data.user);return{token:response.data.key};// Return the token\n}catch(error){throw error.response.data;}};// Function to fetch birthdays\nexport const fetchBirthdays=async token=>{try{const response=await axios.get(`${API_URL}/birthdays/`,{headers:{Authorization:`Token ${token}`}// Adjust based on your authentication method\n});return response.data;// Returns the list of birthdays\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to create a new birthday\nexport const createBirthday=async(birthdayData,token)=>{try{const response=await axios.post(`${API_URL}/birthdays/`,birthdayData,{headers:{Authorization:`Token ${token}`}// Adjust based on your authentication method\n});return response.data;// Returns the created birthday data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to update a birthday\nexport const updateBirthday=async(birthdayId,birthdayData,token)=>{try{const response=await axios.put(`${API_URL}/birthdays/${birthdayId}/`,birthdayData,{headers:{Authorization:`Token ${token}`}// Adjust based on your authentication method\n});return response.data;// Returns the updated birthday data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to delete a birthday\nexport const deleteBirthday=async(birthdayId,token)=>{try{const response=await axios.delete(`${API_URL}/birthdays/${birthdayId}/`,{headers:{Authorization:`Token ${token}`}// Adjust based on your authentication method\n});return response.data;// Optionally return a success message or response\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to fetch user profile\nexport const fetchUserProfile=async token=>{try{const response=await axios.get(`${API_URL}/profile/`,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the user profile data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to fetch anniversaries\nexport const fetchAnniversaries=async token=>{try{const response=await axios.get(`${API_URL}/anniversaries/`,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the list of anniversaries\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to create a new anniversary\nexport const createAnniversary=async(anniversaryData,token)=>{try{const response=await axios.post(`${API_URL}/anniversaries/`,anniversaryData,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the created anniversary data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to update an anniversary\nexport const updateAnniversary=async(anniversaryId,anniversaryData,token)=>{try{const response=await axios.put(`${API_URL}/anniversaries/${anniversaryId}/`,anniversaryData,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the updated anniversary data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to delete an anniversary\nexport const deleteAnniversary=async(anniversaryId,token)=>{try{const response=await axios.delete(`${API_URL}/anniversaries/${anniversaryId}/`,{headers:{Authorization:`Token ${token}`}});return response.data;// Optionally return a success message or response\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to fetch holidays\nexport const fetchHolidays=async token=>{try{const response=await axios.get(`${API_URL}/holidays/`,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the list of holidays\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to create a new holiday\nexport const createHoliday=async(holidayData,token)=>{try{const response=await axios.post(`${API_URL}/holidays/`,holidayData,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the created holiday data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to update a holiday\nexport const updateHoliday=async(holidayId,holidayData,token)=>{try{const response=await axios.put(`${API_URL}/holidays/${holidayId}/`,holidayData,{headers:{Authorization:`Token ${token}`}});return response.data;// Returns the updated holiday data\n}catch(error){throw error.response.data;// Handle the error response\n}};// Function to delete a holiday\nexport const deleteHoliday=async(holidayId,token)=>{try{const response=await axios.delete(`${API_URL}/holidays/${holidayId}/`,{headers:{Authorization:`Token ${token}`}});return response.data;// Optionally return a success message or response\n}catch(error){throw error.response.data;// Handle the error response\n}};","map":{"version":3,"names":["axios","AUTH_URL","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","registerUser","userData","response","post","data","loginUser","credentials","console","log","setItem","user","key","fetchBirthdays","get","createBirthday","birthdayData","updateBirthday","birthdayId","put","deleteBirthday","delete","fetchUserProfile","fetchAnniversaries","createAnniversary","anniversaryData","updateAnniversary","anniversaryId","deleteAnniversary","fetchHolidays","createHoliday","holidayData","updateHoliday","holidayId","deleteHoliday"],"sources":["/Users/test/crud-frontend-/crud-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst AUTH_URL = 'http://crud-backend-for-react-841cbc3a6949.herokuapp.com/auth'; // Authentication base URL\nconst API_URL = 'http://crud-backend-for-react-841cbc3a6949.herokuapp.com/api'; // API base URL for birthdays\n\n\n\n// Set up Axios instance\nconst api = axios.create({\n    baseURL: API_URL,\n});\n\n// Add a request interceptor\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('authToken'); // Retrieve the token from local storage\n    if (token) {\n        config.headers.Authorization = `Token ${token}`; // Assuming your backend uses 'Token' scheme\n    }\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\n\n// Function to register a new user\nexport const registerUser = async (userData) => {\n    try {\n        const response = await axios.post(`${AUTH_URL}/registration/`, userData);\n        return response.data; // Returns the user data from the response\n    } catch (error) {\n        throw error.response.data; // Customize this based on your needs\n    }\n};\n\n// Function to log in a user\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await axios.post(`${AUTH_URL}/login/`, credentials);\n        console.log('Login Response:', response.data); // Log the response data\n        // Store user ID in local storage\n        localStorage.setItem('user', response.data.user); // Use 'userId' for consistency\n        console.log('User ID saved:', response.data.user);\n        return { token: response.data.key }; // Return the token\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n\n\n\n// Function to fetch birthdays\nexport const fetchBirthdays = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/birthdays/`, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the list of birthdays\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to create a new birthday\nexport const createBirthday = async (birthdayData, token) => {\n    try {\n        const response = await axios.post(`${API_URL}/birthdays/`, birthdayData, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the created birthday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to update a birthday\nexport const updateBirthday = async (birthdayId, birthdayData, token) => {\n    try {\n        const response = await axios.put(`${API_URL}/birthdays/${birthdayId}/`, birthdayData, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Returns the updated birthday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to delete a birthday\nexport const deleteBirthday = async (birthdayId, token) => {\n    try {\n        const response = await axios.delete(`${API_URL}/birthdays/${birthdayId}/`, {\n            headers: { Authorization: `Token ${token}` } // Adjust based on your authentication method\n        });\n        return response.data; // Optionally return a success message or response\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to fetch user profile\nexport const fetchUserProfile = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/profile/`, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the user profile data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n\n// Function to fetch anniversaries\nexport const fetchAnniversaries = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/anniversaries/`, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the list of anniversaries\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to create a new anniversary\nexport const createAnniversary = async (anniversaryData, token) => {\n    try {\n        const response = await axios.post(`${API_URL}/anniversaries/`, anniversaryData, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the created anniversary data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to update an anniversary\nexport const updateAnniversary = async (anniversaryId, anniversaryData, token) => {\n    try {\n        const response = await axios.put(`${API_URL}/anniversaries/${anniversaryId}/`, anniversaryData, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the updated anniversary data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to delete an anniversary\nexport const deleteAnniversary = async (anniversaryId, token) => {\n    try {\n        const response = await axios.delete(`${API_URL}/anniversaries/${anniversaryId}/`, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Optionally return a success message or response\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n\n// Function to fetch holidays\nexport const fetchHolidays = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/holidays/`, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the list of holidays\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to create a new holiday\nexport const createHoliday = async (holidayData, token) => {\n    try {\n        const response = await axios.post(`${API_URL}/holidays/`, holidayData, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the created holiday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n// Function to update a holiday\nexport const updateHoliday = async (holidayId, holidayData, token) => {\n    try {\n        const response = await axios.put(`${API_URL}/holidays/${holidayId}/`, holidayData, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Returns the updated holiday data\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n\n\n// Function to delete a holiday\nexport const deleteHoliday = async (holidayId, token) => {\n    try {\n        const response = await axios.delete(`${API_URL}/holidays/${holidayId}/`, {\n            headers: { Authorization: `Token ${token}` }\n        });\n        return response.data; // Optionally return a success message or response\n    } catch (error) {\n        throw error.response.data; // Handle the error response\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}